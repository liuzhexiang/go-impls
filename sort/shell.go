package sort

var gap = []int{
	1, 5,
	19, 41,
	109, 209,
	505, 929,
	2161, 3905,
	8929, 16001,
	36289, 64769,
	146305, 260609,
	587521, 1045505,
	2354689, 4188161,
	9427969, 16764929,
	37730305, 67084289,
	150958081, 268386305,
	603906049, 1073643521,
	2415771649, 4294770689,
	9663381505, 17179475969,
	38654115841, 68718690305,
	154617643009, 274876334081,
	618472931329, 1099508482049,
	2473896443905, 4398040219649,
}

func ShellSort(in []int) {
	for k := getG(len(in)); k >= 0; k-- {
		step := gap[k]
		for i := step; i < len(in); i++ {
			for j := i; j >= step && in[j-step] > in[j]; j -= step {
				in[j], in[j-step] = in[j-step], in[j]
			}
		}
	}
}

func getG(len int) (g int) {
	for i := range gap {
		if len > gap[i] {
			g = i
		} else {
			break
		}
	}
	return g
}
